# Generated by Buildr 1.4.22, change to your liking
require 'buildr'

# Version number for this release
VERSION_NUMBER = "1.0.0"
# Group identifier for your projects
GROUP = "MDP-Airbnb"

# Specify Maven 2.0 remote repositories here, like this:
repositories.remote << "http://repo1.maven.org/maven2"
repositories.remote << "http://repo.maven.apache.org/maven2/"

desc "The MDP-Airbnb project"
define "MDP-Airbnb" do

  project.version = VERSION_NUMBER
  project.group = GROUP
  
  # you may see hints about which jars are missing and should resolve them correctly
  lib_base = _('lib')
  httpc_base = _('lib/httpcomponents-core-4.4.1/lib')
  dependencies = [
    _(httpc_base, 'httpcore-4.4.1.jar'),
    _(httpc_base, 'httpcore-nio-4.4.1.jar'),
    _(lib_base, 'jsoup-1.7.3.jar'),
    _(lib_base, 'json-mdp.jar') ,
    _(lib_base, 'mysql-connector-java-5.1.34-bin.jar')
  ]


  classpath = dependencies.map { |lib| File.join('lib', File.basename(lib)) }
  package :jar
  package(:jar).with(:manifest => manifest.merge({
    'Main-Class' => 'org.tourgune.mdp.airbnb.Main',
    'Class-Path' => classpath.join(' ')
  }))

  compile.using(:source=>1.7, :target=>1.7)
  compile.with dependencies
  test.with Dir[_(lib_base, '*.jar')]
  test.using :fail_on_failure=>false

  # Este task crea una carpeta llamada 'target'
  # y mete ahí todas las librerías y ficheros necesarios.
  task 'package' do
    output_dir = path_to(:target, :main)
    puts "Copying 'airbnb.conf'"
    puts _('airbnb.conf') + " => " + _(output_dir, 'airbnb.conf')
    FileUtils.cp _('airbnb.conf'), _(output_dir)
    puts
    
    puts "Copying libraries"
    puts _('lib') + " => " + _(output_dir, 'lib')
    libdir = _(output_dir, 'lib')
    FileUtils.mkdir libdir unless Dir.exists? libdir
    dependencies.each { |lib|
      FileUtils.cp(lib, libdir)
    }
    puts

		puts "Copying launcher"
		puts _('launch.rb') + " => " + _(output_dir, 'launch.rb')
		FileUtils.cp _('launch.rb'), _(output_dir)
		# El launcher debe ser ejecutable
		File.chmod(0774, _(output_dir, 'launch.rb'))
		puts
    
    puts "Done packaging project"
    puts "Output directory is " + _(output_dir)
  end
end

